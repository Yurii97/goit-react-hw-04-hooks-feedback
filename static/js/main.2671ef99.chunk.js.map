{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.styled.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Sectoin.styled.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["BtnList","styled","ul","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","e","type","onClick","SectionFeedback","div","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","state","setState","countTotalFeedback","values","reduce","acc","value","prevState","percentage","toFixed","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAEaA,EAAUC,IAAOC,GAAV,qF,OCsBLC,I,EAAAA,EArBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,mCACE,cAACL,EAAD,UACGM,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAC,OACzB,6BACE,wBAAQC,KAAK,SAASC,QAAS,kBAAMN,EAAgBI,IAArD,SACGA,KAFIA,WCNNG,EAAkBX,IAAOY,IAAV,qECebC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,eAACJ,EAAD,WACGG,GAAS,6BAAKA,IACdC,MCiBQC,MAtBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,mCACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,cCIOC,MAZf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OACE,mCACE,4BAAIA,OC8CKC,MA7Cf,WACE,MAA0BC,mBAAS,CACjCR,KAAM,EACNC,QAAS,EACTC,IAAK,IAHP,mBAAOO,EAAP,KAAcC,EAAd,KASMC,EAAqB,WAEzB,OADmBvB,OAAOwB,OAAOH,GACfI,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,IAQhDf,EAAuBS,EAAvBT,KAAMC,EAAiBQ,EAAjBR,QAASC,EAAQO,EAARP,IACjBC,EAAQQ,IAEd,OACE,qCACE,cAAC,EAAD,CAASd,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiBX,QAASuB,EAAOtB,gBAnBnB,SAAAI,GAClBmB,GAAS,SAAAM,GAAS,kCAAUA,GAAV,kBAAsBzB,EAAIyB,EAAUzB,GAAK,YAoBzD,cAAC,EAAD,CAASM,MAAO,aAAhB,SACGM,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBApB8B,WACtC,IAAMa,EAAcR,EAAMT,KAAOW,IAAwB,IACzD,OAAOM,EAAaA,EAAWC,UAAY,IAkBfC,KAGtB,cAAC,EAAD,CAAcb,QAAQ,+BCvChCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2671ef99.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const BtnList = styled.ul`\r\n  display: flex;\r\n  & li {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n","import { BtnList } from './FeedbackOptions.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      <BtnList>\r\n        {Object.keys(options).map(e => (\r\n          <li key={e}>\r\n            <button type=\"button\" onClick={() => onLeaveFeedback(e)}>\r\n              {e}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </BtnList>\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const SectionFeedback = styled.div`\r\n  padding: 0 50px;\r\n  margin-top: 50px;\r\n`;\r\n","import { SectionFeedback } from './Sectoin.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <SectionFeedback>\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </SectionFeedback>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: {positivePercentage} %</li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions.jsx';\nimport Section from './components/Section/Section.jsx';\nimport Statistics from './components/Statistics/Statistics.jsx';\nimport Notification from './components/Notification/Notification.jsx';\n\nfunction App() {\n  const [state, setState] = useState({\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  });\n\n  const addFeedback = e => {\n    setState(prevState => ({ ...prevState, [e]: prevState[e] + 1 }));\n  };\n  const countTotalFeedback = () => {\n    const arrayValue = Object.values(state);\n    return arrayValue.reduce((acc, value) => acc + value, 0);\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const percentage = (state.good / countTotalFeedback()) * 100;\n    return percentage ? percentage.toFixed() : '0';\n  };\n\n  const { good, neutral, bad } = state;\n  const total = countTotalFeedback();\n\n  return (\n    <>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions options={state} onLeaveFeedback={addFeedback} />\n      </Section>\n      <Section title={'Statistics'}>\n        {total ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <Notification message=\"There is no feedback\" />\n        )}\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}